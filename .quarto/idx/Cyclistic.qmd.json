{"title":"Case Study on Cyclistic","markdown":{"yaml":{"title":"Case Study on Cyclistic","subtitle":"A Bike Sharing Company","author":"By Somnath DasGupta","format":{"html":{"code-fold":true,"toc":true,"number-sections":true,"number-depth":3,"toc-depth":2,"toc-style":"sidebar","toc-location":"left","toc-title":"Contents","smooth-scroll":true,"embed-resources":true,"code-copy":true,"highlight-style":"github","comments":false,"code-line-numbers":true,"code-overflow":"scroll","self-contained":true,"code-block-bg":true,"code-block-border-left":"#2E8B57","css":"style.css","theme":{"light":"pulse","dark":"darkly"},"execute":{"echo":true}}},"editor_options":{"chunk_output_type":"inline"},"editor":"visual"},"headingText":"INTRODUCTION","headingAttr":{"id":"","classes":[],"keyvalue":[["style","font-family: Bookman Old Style;"]]},"containsRefs":false,"markdown":"\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-justify\">\n\nHello everyone, it's been a few months since I've been working on the Google Data Analytics Professional Certificate through Coursera. Throughout this journey I've accumulated lots of interesting, insightful and most importantly, useful information about various tools that were included with the bundle, such as Tableau, R programming, SQL, Spreadsheets.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-justify\">\n\nThis particular curriculum also introduced me to various sorts of standardized practices and also gave me a universal framework to follow throughout every single project along with some key data analyst terminologies and processes. Now below is a brief walk through of my thought process and overall understanding that I have gained overtime by completing this case study that is included with the course by using various tools, methods and strategy.\n\n</p>\n\n## BACKGROUND INFORMATION {style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-justify\">\n\nYou are working for Cyclistic, a bike-sharing company. Bikes can be unlocked from one station and returned to any other station in the system anytime.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-justify\">\n\nCyclistic has flexible pricing plans: single-ride passes, full-day passes, and annual memberships. Customers who purchase single-ride or full-day passes are referred to as casual riders. Customers who purchase annual memberships are Cyclistic members.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-justify\">\n\nThe director of marketing believes the company's future success depends on maximizing the number of annual memberships, as finance analysts have concluded that annual memberships are much more profitable than casual riders. She also believes that there is a good chance of converting casual riders to members as they are already aware of a Cyclistic program and have chosen it for their mobility needs.\n\n</p>\n\n## [ASK PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nSome of the crucial questions asked will guide the direction of the future marketing program:\n\n</p>\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   How casual and annual members use cyclistic services differently?\n-   What is the estimate of people who choose cyclistic over any other daily commute services?\n-   Does cyclistic have any unique value proposition for their riders over any other competitor in the same segment?\n-   What is the overall past experience with different kinds of marketing platform, say it's digital marketing,influencer marketing or traditional marketing?\n\n</ul>\n\n### Key Takeways {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n1.  Identify business task.\n\n-   The main objective is to design marketing strategies for converting casual riders to annual members by understanding how they differentiate.\n-   The differentiation will be checked based upon certain parameters, which are their preferred weekday, rides per week,duration spent weekly and monthly,most visited routes etc.\n\n2.  Consider key Stakeholders.\n\n-   Director of Marketing (Lily Moreno).\n-   Marketing Analytics team.\n-   Executive team.\n\n</ul>\n\n### Deliverable {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Identify each and every pattern in which both rider types differentiate.\n-   All possible related factors which are not letting casual riders opt for the annual membership program.\n\n</ul>\n\n## [PREPARE PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nHere, for this analysis, I will be using a public dataset that is made available on this [page](https://divvy-tripdata.s3.amazonaws.com/index.html){preview-link=\"true\"}. The data has been made available by Motivate International Inc. under this [license](https://ride.divvybikes.com/data-license-agreement){preview-link=\"true\"}.\n\n</p>\n\n### Key Task {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Load each of the datasets month wise to maintain the consecutive order.\n\n-   Download the datasets from a given online repository and then save them in a separate folder.\n\n-   Identify the doc format and check if lists of doc are readable and writable.\n\n-   Determine the credibility of data by inspecting for any vague or unwanted rows in each of the datasets and then sort accordingly.\n\n-   Check for the total number of columns and its name to concatenate successfully.\n\n</ul>\n\n### Deliverable {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Documenting the entire procedure involved in this phase.\n\n-   A short brief for each operation performed for ease of understanding.\n\n</ul>\n\n### [CODE CHUNK]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nLet's load the libraries:\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(janitor)\nlibrary(hms)\nlibrary(geosphere)\nlibrary(spatialrisk)\nlibrary(distances)\nlibrary(Distance)\nlibrary(measurements)\nlibrary(plotrix)\nlibrary(lubridate)\nlibrary(ggalt)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(ggridges)\nlibrary(scales)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(ggiraph)\nlibrary(viridisLite)\nlibrary(labeling)\nlibrary(farver)\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nImporting all Datasets\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\njanuary_2021 <- read_csv(\"202101-divvy-tripdata.csv\")\nfebruary_2021 <- read_csv(\"202102-divvy-tripdata.csv\")\nmarch_2021 <- read_csv(\"202103-divvy-tripdata.csv\")\napril_2021 <- read_csv(\"202104-divvy-tripdata.csv\")\nmay_2021 <- read_csv(\"202105-divvy-tripdata.csv\")\njune_2021<- read_xlsx(\"202106-divvy-tripdata.xlsx\")\njuly_2021<- read_xlsx(\"202107-divvy-tripdata.xlsx\")\naugust_2021 <- read_xlsx(\"202108-divvy-tripdata.xlsx\")\nseptember_2021 <- read_xlsx(\"202109-divvy-tripdata.xlsx\")\noctober_2021 <- read_xlsx(\"202110-divvy-tripdata.xlsx\")\nnovember_2021 <- read_csv(\"202111-divvy-tripdata.csv\")\ndecember_2021 <- read_csv(\"202112-divvy-tripdata.csv\")\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nBinding all datasets years wise into one using do.call() , rbind , and list() function:\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021 <- do.call(\"rbind\",list( january_2021, february_2021, march_2021,april_2021, may_2021, june_2021,july_2021,august_2021,\n                                           september_2021,october_2021,november_2021,december_2021))\n\n\n```\n\n## [PROCESS PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nAccumulating datasets for cleaning and preparing for the analysis.\n\n</p>\n\n### Key Task {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Checking for any errors or missing values within datasets.\n\n-   Removing duplicates and outliers from datasets.\n\n-   Selecting the right tools to perform these operations.\n\n-   Creating a backup of original data in case any crucial information gets eradicated during the cleaning process.\n\n-   Transform the data in a desired workable format.\n\n</ul>\n\n### Deliverable {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Applying some crucial changes to the dataset, such as changing datatype,using various functions to calculate values.\n\n-   Manipulating data by performing various computations as required.\n\n-   Stating each computation use case along with a final preview of the entire changes made.\n\n-   Documenting the step by step process in detail.\n\n</ul>\n\n### [CODE CHUNK]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving duplicated rows and coulmns.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021 <- all_datasets_2021[!duplicated(all_datasets_2021), ]\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving incomplete data through complete.cases().\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021<- all_datasets_2021[complete.cases(all_datasets_2021), ]\n\n```\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021[complete.cases(all_datasets_2021), ]\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nSplit date from a column using as.date() function.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor started_at column\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$date<-as.Date(all_datasets_2021$started_at)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor ended_at column.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$date_of_arrival<-as.Date(all_datasets_2021$ended_at)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRenaming columns in a dataset.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021<- rename(all_datasets_2021,date_of_journey = date)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nExtracting Months from date.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$month <- as.character(months(all_datasets_2021$date_of_journey))\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nSplit time from a column using as.POSIXCT()\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor started_at column\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$journey_departure_time<-format(as.POSIXct(all_datasets_2021$started_at),\n                                                  format = \"%H:%M:%S\")\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nConverting POSIXCT() function class 'character' to hms & difftime in order to perform calculations.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$departure_time<-as_hms(all_datasets_2021$journey_departure_time)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor ended_at column\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$journey_arrival_time<-format(as.POSIXct(all_datasets_2021$ended_at),\n                                                format = \"%H:%M:%S\")\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nConverting POSIXCT() function class 'character' to hms & difftime in order to perform calculations.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$arrival_time<-as_hms(all_datasets_2021$journey_arrival_time)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nDeleting columns from dataset.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor started_at column.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$started_at <- NULL\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor ended_at column.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$ended_at <- NULL\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor journey_departure_time\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$journey_departure_time <-NULL\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor journey_arrival_time.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$journey_arrival_time <- NULL\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor removing dataset.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nremove(january_2021)\nremove(february_2021)\nremove(march_2021)\nremove(april_2021)\nremove(may_2021)\nremove(june_2021)\nremove(july_2021)\nremove(august_2021)\nremove(september_2021)\nremove(october_2021)\nremove(november_2021)\nremove(december_2021)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nDifference between time using difftime() in terms of hours.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$total_mins<- difftime(all_datasets_2021$arrival_time,all_datasets_2021$departure_time ,units = \"hours\")\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTo remove negative time difference we converted the difference into absolute value which is positive using abs().\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nAs cannot be negative in real so decided to convert it into absolute values.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$total_mins_spent <- abs(all_datasets_2021$total_mins)\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\ncleaning all spaces in between each column name.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021<- all_datasets_2021 %>% \n  janitor::clean_names()\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving total_mins column.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$total_mins <- NULL\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nCreating a separate column for weekdays of journey using weekdays().\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$day_of_journey <- weekdays(all_datasets_2021$date_of_journey)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nCreating a separate column for weekdays of arrival using weekdays().\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$day_of_arrival <- weekdays(all_datasets_2021$date_of_arrival)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nCalculating the riders total distance travelled using geosphere() and spatialrisk() package.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$total <- spatialrisk::haversine(all_datasets_2021$start_lat,all_datasets_2021$start_lng,all_datasets_2021$end_lat,all_datasets_2021$end_lng)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving all the columns with zero input by converting all those columns into na's using na_if() function.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$distance <- na_if(all_datasets_2021$total, 0)\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nDistance computed is in default 'meter' format, so converting it into 'km' by dividing entire column by 1000.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$total_distance <- all_datasets_2021$distance / 1000\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving two column from dataset.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving distance column.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$distance <- NULL\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving total column\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021$total <- NULL\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nApplying na.omit() for removing all NA values from dataset.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021 <- na.omit(all_datasets_2021)\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nConverting this new dataset into data frame using data.frame() function to perform all sort of computation.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_datasets_2021 <- data.frame(all_datasets_2021)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nSummary Of data.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nsummary(all_datasets_2021)\n\nstr(all_datasets_2021)\n\n```\n\n## [ANALYZE PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nIn this particular phase, I will start analysing the clean and processed dataset in order to find answers to many of the questions that will help stakeholders of a cyclistic company to take up on their marketing campaign in a specific direction which, in turn will lead to retaining existing members and converting all other forthcoming users to a subscription programme.\n\n</p>\n\n### Key Task {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Various sets of comparisons were made to deep dive into the dataset in order to understand the complete scenario of customer's behaviour and their preferences\n\n-   Series of analysis are performed to get the thorough details for the entire analysis and also lay down a path of conviction to answer existing and imminent intrigues.\n\n-   Aggregate several columns to explore the various aspects of the dataset and its significance in how people perceive cyclistic services.\n\n-   Examine every nook and cranny in the dataset using various built-in R functions to get the final profiling done for both the categories of customers.\n\n-   Identifying trends and relationships for each of the member types and their utility.\n\n</ul>\n\n### Deliverable {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Established summary through several useful functions such as 'head()', 'filter()','count()', 'glimpse()', etc.\n\n-   Computations performed will illustrate a complete brief on the utility of every member type in terms of their choices and their preferences.\n\n-   Some statistical operations are also performed to develop a brief on some crucial factors that influence people's conduct.\n\n</ul>\n\n### [CODE CHUNK]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nSummary of total_mins_spent column in terms of mean, median, max and min.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nRide_duration_summary <- all_datasets_2021 %>% \n  summarize(average_ride_duration = mean(total_mins_spent), \n            min_ride_duration = min(total_mins_spent), \n            median_ride_duration = median(total_mins_spent),\n            max_ride_duration = max(total_mins_spent))\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTo get a overview of Ride_duration-summary.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(Ride_duration_summary)\n\nglimpse(Ride_duration_summary)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nExtracting top 10 most visited stations via set of processing for member type.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nFiltering default dataset and creating a new one with filtered member type member.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_trips_member <- filter(all_datasets_2021, member_casual == \"member\")\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nAdding a new column using mutate () function from existing start_station_name column.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_trips_member<-all_trips_member %>% \n  mutate(route = paste(start_station_name,\"To\", sep = \" \"))\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nConcatenating existing column with newly created column using mutate() function.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_trips_member<-all_trips_member %>% \n  mutate(route = paste(route,end_station_name, sep = \" \"))\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nUsing pipe operator summarizing number of rides , mean of total_mins_spent grouping it by route and then arranging sequentially.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\npopular_ride_route_member <- all_trips_member %>% \n  group_by(route) %>% \n  summarize(number_of_rides = n(),average_duration_minutes = mean(total_mins_spent)) %>% \n  arrange(route,number_of_rides,average_duration_minutes)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nUsing pipe operator summarizing number of rides , mean of total_distance grouping it by route and then arranging sequentially for member type.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\npopular_distance_travelled_member <- all_trips_member %>% \n  group_by(route) %>% \n  summarize(number_of_rides = n(),average_distance = mean(total_distance)) %>% \n  arrange(route,number_of_rides,average_distance)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nStoring top ten station name for member type in desc order using head() function along with total duration spent.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\npopular_ride_route_member_top10 <- head(arrange(popular_ride_route_member,desc(number_of_rides)), n = 10)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nStoring top ten station name for member type in desc order using head() along with total distance travelled.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\npopular_ride_distance_member_top10 <- head(arrange(popular_distance_travelled_member,desc(number_of_rides)), n = 10)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGlance on newly obtained data.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\npopular_ride_route_member_top10\n\npopular_ride_distance_member_top10\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nExtracting top 10 most visited stations via set of processing for casual type.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nFiltering default dataset and creating a new one with filtered member type casual.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_trips_casual <- filter(all_datasets_2021, member_casual == \"casual\")\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nAdding a new column using mutate () function from existing start_station_name column.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_trips_casual<-all_trips_casual %>% \n  mutate(route = paste(start_station_name,\"To\", sep = \" \"))\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nConcatenating existing column with newly created column using mutate() function.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nall_trips_casual<-all_trips_casual %>% \n  mutate(route = paste(route,end_station_name, sep = \" \"))\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nUsing pipe operator summarizing number of rides , mean of total_mins_spent grouping it by route and then arranging sequentially.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\npopular_ride_route_casual <- all_trips_casual %>% \n  group_by(route) %>% \n  summarize(number_of_rides = n(),average_duration_minutes = mean(total_mins_spent)) %>% \n  arrange(route,number_of_rides,average_duration_minutes)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nUsing pipe operator summarizing number of rides , mean of total_distance grouping it by route and then arranging sequentially for casual type.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\npopular_distance_travelled_casual <- all_trips_casual %>% \n  group_by(route) %>% \n  summarize(number_of_rides = n(),average_distance = mean(total_distance)) %>% \n  arrange(route,number_of_rides,average_distance)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nStoring top ten station name for casual member type in desc order using head() function along with total duration spent.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\npopular_ride_route_casual_top10 <- head(arrange(popular_ride_route_casual,desc(number_of_rides)), n = 10)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nStoring top ten station name for casual member type in desc order using head() along with total distance travelled.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\npopular_ride_distance_casual_top10 <- head(arrange(popular_distance_travelled_casual,desc(number_of_rides)), n = 10)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGlance on newly obtained data.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\npopular_ride_route_casual_top10\n\npopular_ride_distance_casual_top10\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nRemoving some of the dataset that were created to fetch some specific data.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nremove(all_trips_casual)\nremove(all_trips_member)\nremove(popular_ride_route_casual)\nremove(popular_ride_route_member)\nremove(popular_distance_travelled_casual)\nremove(popular_distance_travelled_member)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTaking a glance on start_station_name with respect to member_casual in descending order limited up to twenty entries.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(all_datasets_2021,start_station_name,member_casual,sort = TRUE), n = 20)\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTaking a glance on end_station_name with respect to member_casual in ascending order limited up to twenty entries.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(all_datasets_2021,end_station_name,member_casual,sort = TRUE), n = 20)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTaking a glance on total count by filtering and comparing start_station_name and end_station_name with respect to member_casual in ascending order up to twenty entries.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(filter(all_datasets_2021,start_station_name == end_station_name),member_casual,sort = TRUE), n = 20)\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nLooking for a new gleam by filtering and comparing start_station_name and end_station_name along with a preview of start_station_name with respect to member_casual in ascending order limited to twenty entries.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(filter(all_datasets_2021,start_station_name == end_station_name),start_station_name,member_casual,sort = TRUE), n = 20)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGetting a preview by counting start_station_name with respect to day_of_journey by sorting it in ascending order limited to twenty entries.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(all_datasets_2021,start_station_name,day_of_journey,sort = TRUE),n=20)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTaking a glance on dataset by counting start_station_name, day_of_journey with respect to months alongside sorting the computation in ascending order limited upto twenty entries.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(all_datasets_2021,start_station_name,day_of_journey, month,sort = TRUE),n=20)\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nPreviewing and pulling out the peak hours from departure time along with weekdays limited up to twenty entries.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(all_datasets_2021,departure_time,day_of_journey,sort = TRUE),n = 20)\n\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nPreviewing and pulling out the peak hours from arrival time along with weekdays limited up to twenty entries.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(all_datasets_2021,arrival_time,day_of_arrival,sort = TRUE), n = 20)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nDividing into very specific information using count to identify number of rides happened each weekday followed by types of members.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(all_datasets_2021, day_of_journey , member_casual,sort = FALSE),n = 20)\n\nhead(count(all_datasets_2021, day_of_arrival , member_casual,sort = FALSE),n = 20)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTaking a glance on distinct values of these column to understand assigned allocation of its sub-category using table function.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\ntable(all_datasets_2021$rideable_type) \n\ntable(all_datasets_2021$member_casual)\n\ntable(all_datasets_2021$month)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nChecking on ratio of rideable type sub category with member type to get a gleam on the distribution.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(all_datasets_2021,rideable_type,member_casual,sort = TRUE), n = 20)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGlimpse of the maximum distance travelled by a rider using max function.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(max(all_datasets_2021$total_distance), sort = TRUE)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGlimpse of the dataset through counting total_distance and month using sort function limited upto twenty entries.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(all_datasets_2021,total_distance, month, sort = FALSE), n = 20)\n\nhead(count(all_datasets_2021,max(total_distance), month, sort = FALSE), n = 20)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGlimpse of the dataset based on the total_mins\\_ spent column and month followed by membership type in descending and ascending order limited upto 30 entries maximum.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nhead(count(all_datasets_2021,total_mins_spent, month, sort = TRUE), n = 20)\n\nhead(count(all_datasets_2021,max(total_mins_spent), month,member_casual, sort = TRUE), n = 20)\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nChecking Quantile values and performing winsorization on the dataset.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nFor total_mins_spent column.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nquantile(all_datasets_2021$total_mins_spent,probs = seq(.99,1.0,by=0.001))\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nFor total_distance column.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nquantile(all_datasets_2021$total_distance,probs = seq(.75,1.0,by=.05))\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nFetching data using specific member type along with day_of_journey and max of total mins spent column limited upto twenty entries.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\n\nhead(count(filter(all_datasets_2021,member_casual == 'casual'),member_casual,day_of_journey,max(total_mins_spent),sort = TRUE),n = 20)\n\nhead(count(filter(all_datasets_2021,member_casual == 'member'),member_casual,day_of_journey,max(total_mins_spent),sort = TRUE),n = 20)\n\n```\n\n## [SHARE PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n### Key Task {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Establish the best way to share visualization using R and tableau.\n\n-   Illustrate every minute detail backed with explanation.\n\n-   Choose adequate graph type to conclude findings along with legends, labels and heading to improve readability and interpretation.\n\n-   Ensure work is easily accessible.\n\n</ul>\n\n### Deliverable {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Convey findings accompanied with illustration and explanation.\n\n-   Put a short description of every visualization added under this phase.\n\n</ul>\n\n### [VISUALIZATION]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nHere we are trying to look through overall distribution of members types based on total duration spent on weekdays.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\nggplot(data = all_datasets_2021)+ aes(x = day_of_journey, y = as.numeric(total_mins_spent),fill = member_casual) + \n  geom_bar(stat = \"identity\", width = 0.5, position = 'stack') + scale_fill_manual(values = c(\"red\", \"blue\")) +\nlabs(title = \"Cyclistic Data: Week Day Vs Total Duration Spent\",x = \"Weekday of Journey\", \n     y = \"Total Duration\",fill = \"Member Type\") + theme(axis.text.x = element_text(angle = 60,hjust = 1)) + theme_minimal()\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nHere getting a glimpse on the utilization of rideable type by member type and then distributed across weekdays.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\nggplot(data = all_datasets_2021) +  (mapping =  aes(x = member_casual, fill = rideable_type)) + \n  geom_bar(width = 0.5, alpha = 2.5) + facet_wrap(~day_of_journey) + \n  scale_fill_manual(values = c(\"Black\", \" yellow\", \"green\")) +\n  labs(title = \"Cyclistic Data: Member Type preference WIth Rideable Type\",x = \"Member Type\", \n       y = \"No. of Count\",fill = \"Rideable Type\") +\n  theme(axis.text.x = element_text(angle = 60,hjust = 1)) + theme_classic()\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nGlimpse on the member type based on total duration spent on total distance travelled.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nggplot( data = all_datasets_2021) + \n  aes(x = hms::as_hms(total_mins_spent), y = total_distance, shape = member_casual,color = member_casual) +\n  scale_color_manual(name = \"Member Type\",values = c(\"Black\", \" Purple\")) + \n  scale_shape_manual(name = \"Member Type\",values = c(19,17)) + \n  geom_point(size = 3,alpha = 0.5,stroke = 1)+\n  labs(title = \"Cyclistic Data: Total Minutes spent with Total Distance Travelled\",\n       caption = \"Comparing the Difference by Member Type\",x = \"Total Minutes Spent\", y = \"Total Distance Travelled\") + \n  theme_minimal()\n   \n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTaking a look on top 10 stations based on average duration spent by casual member type.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nggplot( data = popular_ride_route_casual_top10) + aes(x = as_hms(average_duration_minutes) ,y = route, group = 1) + \n  geom_line(color=\"Red\") + geom_point(shape=21, color=\"black\", fill=\"blue\", size=6) +\n  labs( title = \"Top 10 Most Visited Stations\",subtitle = \"For Casual Riders\", \n        x = \"Duration Spent (In Hours)\", y = \"Station Name\", \n        caption = \"Popularity of stations is determined by no of rides & average distance travelled\") +\n  theme_minimal()\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTaking a look on top 10 stations based on average duration spent by subscribed member type.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nggplot( data = popular_ride_route_member_top10) + aes(x = as_hms(average_duration_minutes) ,y = route, group = 1) + \n  geom_line(color=\"green\") + geom_point(shape=21, color=\"black\", fill=\"Brown\", size=6) +\n  labs( title = \"Top 10 Most Visited Stations\",subtitle = \"For Membership Riders\", \n        x = \"Duration Spent (In Hours)\", y = \"Station Name\", \n        caption = \"Popularity of stations is determined by no of rides & average distance travelled\") +theme_minimal()\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTaking a look on top 10 stations based on average distance travelled by casual member type.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nggplot(data = popular_ride_distance_casual_top10) + aes(x = average_distance, y = route, group = 1) +\n  geom_line(color=\"orange\") +geom_point(shape = 21, color = \"black\", fill = \"dark green\", size = 6) + \n  labs( title = \"Top 10 Most Visited Stations\",subtitle = \"For Casual Riders\", \n        x = \"Duration Spent (In Hours)\", y = \"Station Name\",\n        caption = \"Popularity of stations is determined by no of rides & average time spent\") +theme_light()\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTaking a look on top 10 stations based on average distance travelled by subscribed member type.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nggplot(data = popular_ride_distance_member_top10) + aes(x = average_distance, y = route, group = 1) + geom_line(color=\"orange\") +\n  geom_point(shape = 21, color = \"black\", fill = \"dark green\", size = 6) + \n  labs( title = \"Top 10 Most Visited Stations\",subtitle = \"For Membership Riders\", \n        x = \"Duration Spent (In Hours)\", y = \"Station Name\", \n        caption = \"Popularity of stations is determined by no of rides & average time spent\") +theme_ipsum()\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nOverview on the distribution split of member type based on each weekdays of every month.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nggplot(data = all_datasets_2021) + geom_col(aes(x = day_of_journey,y = month, fill = member_casual), position = \"identity\") + \n  scale_fill_manual(values = c(\"blue\",\"red\")) + labs(title = \"Busiest WeekDay of The Month\", \nsubtitle = \" Followed By Member Type\", x = \"Day of Journey\" , y = \"Month\", fill = \"Member Type\") + \n  theme_bw()\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nGetting a snap on overall allocation of total duration spent on every month based on each weekdays.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nggplot(data = all_datasets_2021) + geom_col(mapping = aes(x = month, y = as.numeric(as.difftime(total_mins_spent)),\n  fill = day_of_journey)) + \n  scale_fill_manual(values = c(\"blue\", \"Orange\",\"Dark Green\",\"violet\",\"Red\",\"Brown\",\"black\")) + \n  labs(title = \"Monthly time duration spent\", subtitle = \"Followed By Weekday\", x = \"Total Time Duration\",\n  y =\" Month\", fill = \" Day of Journey\") + \n  theme(axis.text.x = element_text(angle = 40, vjust = 0.5, hjust=1))\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nOverview of total distance travelled by each member type on every month.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nggplot(data = all_datasets_2021) + aes(x = month, y = total_distance, fill = member_casual) + \n  geom_bar(stat =\"identity\",position = \"dodge\") + scale_fill_manual(values = c(\"blue\",\"orange\"))+\n  labs(title = \"Distance Travelled by Month\", subtitle = \"Followed by Member Type\", x = \" Month\",\n       y = \"Total Distance\", fill = \"Member Type\") +  \n  theme(axis.text.x = element_text(angle = 40, vjust = 0.5, hjust=1),\n        plot.background = element_rect(fill = \"#D2B48C\"))\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTaking a glance on rideable type distribution on each weekdays of every month.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nggplot(data = all_datasets_2021) + aes(x = day_of_journey, y = month) + \n  geom_col(aes(fill = rideable_type),width = .5,position = 'identity') + \n  scale_fill_manual(values = c(\"Red\",\"Blue\",\"Dark green\"))+\n  labs(title = \"Number of Rides Per Weeek\",subtitle = \"Followed By Rideable Type\",\n       x =\"Month\", y = \"Day Of Journey\", fill = \"Rideable Type\") +\n  theme(axis.text.x = element_text(angle = 50, vjust = 0.5, hjust=1)) + \n  theme_classic()\n\n```\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nOverview on the monthly usage of rideable type.\n\n</p>\n\n```{r warning=FALSE, message=FALSE}\n\nggplot(data = all_datasets_2021) + aes(x = month, fill = rideable_type) + \n  stat_count(width = 0.5) + scale_fill_manual(values = c(\"Dark Blue\",\"Maroon\",\"Purple\")) +\nlabs( title = \"Rideable type Popularity By Months\", x = \"Months\", y = \"Count\", fill = \"Rideable Type\") + \n  theme(axis.text.x = element_text(angle = 40, vjust = 0.5, hjust = 1))\n\n```\n\n## MAP VISUALS.\n\n![](Main%20Map.png){.fragment width=\"1064\" height=\"697\"}\n\n```         \n                              Complete Map\n```\n\n![](Start%20Station%20Name.png){.fragment width=\"521\" height=\"698\"}\n\n```         \n                Start Station Name\n```\n\n![](End%20Station%20Name.png){.fragment width=\"493\" height=\"700\"}\n\n```         \n                End Station Name\n```\n\n## [ACT PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nThis crucial phase will be carried out by the executive team, Director of Marketing (Lily Moreno) and the Marketing Analytics team based on the above analysis made.\n\n</p>\n\n## [CONCLUSION]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Cyclistic have a greater number of subscribed members as compared to casual riders and, based on the overall analysis, the ratio in which casual riders differ from subscribed members is only 13.76%.\n\n-   Casual riders mostly prefer the weekend slot for choosing a ride with Cyclistic, which is Friday, Saturday and Sunday.\n\n-   Subscribed members in general prefer weekday slots for choosing a ride with Cyclistic,which is Monday to Thursday, as well as the weekend slot.\n\n-   Based on twelve month's data, it was observed that casual riders took the ride for the longest duration of time as compared to subscribed members and also the month which recorded the highest spent time was July.\n\n-   Distribution of rideable type seems completely unbalanced and inappropriate as docked bikes seem to have the least significance in terms of the usage distribution where only one bike was rented within an entire year by a subscribed member as compared to casual riders.\n\n-   The overall month's wise distribution shows that Saturdays and Sundays seem to attract more crowds as compared to all other weekdays and its constant for every single month.\n\n-   Peak hours are mostly from 5'oclock to 7'oclock in the evening for both departure and arrival by each of the member types.\n\n-   Out of three rideable options, the classic bike is the most endorsed one, followed by the electric bike and the docked bike, which have very minimal interaction with subscribed members especially.\n\n</ul>\n\n## [DELIVERABLE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   From the detailed analysis, it was learned that we need to cater to different sets of casual riders, first, who pursue cyclistic services in a completely oriented manner, and second, who just use them in an emergency or may be once in a while type.\n\n-   One more thing needs to be noted to convert the maximum number of casual riders personified ads and campaigns are very essential and necessary.\n\n-   The other thing is, it's more about how to cater your services in a way which can have multiple unique value propositions based on the type of customers it is directed or promoted to.\n\n-   It's better to push some integral benefits that most people are surrounded by today, such as health, and then diversify health into various subsets like protection from cancer, arthritis,stroke etc to specific groups of casual riders.\n\n-   Firstly introduce one month trial plan with all yearly perks and benefits and then start charging based on a monthly basis or annual basis.Also, use the old trick in the book by adding their payment information in advance and enabling auto payment on both a monthly, quarterly and yearly basis.\n\n-   Remove the one-day subscription plan and include a minimum monthly plan with all the benefits that a member gets yearly and price it higher as compared to the annual plan and discounting should be done in a descending manner.\n\n-   To enable the auto debit feature, ensure users the data is absolutely safe with the cyclistic plus add a tagline saying \"We are never hard on commitments\".\n\n-   Overall distribution of bikes is completely inappropriate as docked bike is just not considered by any members and it is mostly used by casual members due to unavailability. It is essential that company should consider converting all rideable types to electric bikes with different specifications and variants as the future is electric.\n\n-   To make the subscription plan even more fascinating, some additional gear of its own brand can also be introduced or an association with a renowned brand can also be perfect.\n\n-   Try hosting or sponsoring any big events that promote cyclistic and its services under all phenomena and also introduce flesh sales on any special events or occasions as it may help attract more number of customers.\n\n</ul>\n\n## [RESOURCES]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Stack Overflow.\n-   RStudio and Kaggle community.\n-   Dataset was made available by Motivate International Inc.\n\n</ul>\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":true,"toc-depth":2,"embed-resources":true,"highlight-style":"github","self-contained":true,"css":["style.css"],"output-file":"Cyclistic.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.475","title":"Case Study on Cyclistic","subtitle":"A Bike Sharing Company","author":"By Somnath DasGupta","editor_options":{"chunk_output_type":"inline"},"editor":"visual","number-depth":3,"toc-style":"sidebar","toc-location":"left","toc-title":"Contents","smooth-scroll":true,"code-copy":true,"comments":false,"code-block-bg":true,"code-block-border-left":"#2E8B57"},"extensions":{"book":{"multiFile":true}}}}}