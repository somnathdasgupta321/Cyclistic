{
  "hash": "cdeac3d9ab614c50dba46e4838cff8ee",
  "result": {
    "markdown": "---\ntitle: \"Case Study on Cyclistic\"\nsubtitle: \"A Bike Sharing Company\"\nauthor: \"By Somnath DasGupta\"\nformat: \n  html: \n    code-fold: true\n    toc: true\n    number-sections: true\n    number-depth: 3\n    toc-depth: 2\n    toc-style: sidebar\n    toc-location: left\n    toc-title: Contents\n    smooth-scroll: true\n    embed-resources: true\n    code-copy: true\n    highlight-style: github\n    comments: false\n    code-line-numbers: true\n    code-overflow: scroll\n    self-contained: true\n    code-block-bg: true\n    code-block-border-left: \"#2E8B57\"\n    css: style.css\n    theme:\n      light: pulse\n      dark: darkly\n    execute:\n      echo: true\neditor_options: \n  chunk_output_type: inline\neditor: visual\n---\n\n\n## INTRODUCTION {style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-justify\">\n\nHello everyone, it's been a few months since I've been working on the Google Data Analytics Professional Certificate through Coursera. Throughout this journey I've accumulated lots of interesting, insightful and most importantly, useful information about various tools that were included with the bundle, such as Tableau, R programming, SQL, Spreadsheets.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-justify\">\n\nThis particular curriculum also introduced me to various sorts of standardized practices and also gave me a universal framework to follow throughout every single project along with some key data analyst terminologies and processes. Now below is a brief walk through of my thought process and overall understanding that I have gained overtime by completing this case study that is included with the course by using various tools, methods and strategy.\n\n</p>\n\n## BACKGROUND INFORMATION {style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-justify\">\n\nYou are working for Cyclistic, a bike-sharing company. Bikes can be unlocked from one station and returned to any other station in the system anytime.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-justify\">\n\nCyclistic has flexible pricing plans: single-ride passes, full-day passes, and annual memberships. Customers who purchase single-ride or full-day passes are referred to as casual riders. Customers who purchase annual memberships are Cyclistic members.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-justify\">\n\nThe director of marketing believes the company's future success depends on maximizing the number of annual memberships, as finance analysts have concluded that annual memberships are much more profitable than casual riders. She also believes that there is a good chance of converting casual riders to members as they are already aware of a Cyclistic program and have chosen it for their mobility needs.\n\n</p>\n\n## [ASK PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nSome of the crucial questions asked will guide the direction of the future marketing program:\n\n</p>\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   How casual and annual members use cyclistic services differently?\n-   What is the estimate of people who choose cyclistic over any other daily commute services?\n-   Does cyclistic have any unique value proposition for their riders over any other competitor in the same segment?\n-   What is the overall past experience with different kinds of marketing platform, say it's digital marketing,influencer marketing or traditional marketing?\n\n</ul>\n\n### Key Takeways {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n1.  Identify business task.\n\n-   The main objective is to design marketing strategies for converting casual riders to annual members by understanding how they differentiate.\n-   The differentiation will be checked based upon certain parameters, which are their preferred weekday, rides per week,duration spent weekly and monthly,most visited routes etc.\n\n2.  Consider key Stakeholders.\n\n-   Director of Marketing (Lily Moreno).\n-   Marketing Analytics team.\n-   Executive team.\n\n</ul>\n\n### Deliverable {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Identify each and every pattern in which both rider types differentiate.\n-   All possible related factors which are not letting casual riders opt for the annual membership program.\n\n</ul>\n\n## [PREPARE PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nHere, for this analysis, I will be using a public dataset that is made available on this [page](https://divvy-tripdata.s3.amazonaws.com/index.html){preview-link=\"true\"}. The data has been made available by Motivate International Inc. under this [license](https://ride.divvybikes.com/data-license-agreement){preview-link=\"true\"}.\n\n</p>\n\n### Key Task {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Load each of the datasets month wise to maintain the consecutive order.\n\n-   Download the datasets from a given online repository and then save them in a separate folder.\n\n-   Identify the doc format and check if lists of doc are readable and writable.\n\n-   Determine the credibility of data by inspecting for any vague or unwanted rows in each of the datasets and then sort accordingly.\n\n-   Check for the total number of columns and its name to concatenate successfully.\n\n</ul>\n\n### Deliverable {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Documenting the entire procedure involved in this phase.\n\n-   A short brief for each operation performed for ease of understanding.\n\n</ul>\n\n### [CODE CHUNK]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nLet's load the libraries:\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(janitor)\nlibrary(hms)\nlibrary(geosphere)\nlibrary(spatialrisk)\nlibrary(distances)\nlibrary(Distance)\nlibrary(measurements)\nlibrary(plotrix)\nlibrary(lubridate)\nlibrary(ggalt)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(ggridges)\nlibrary(scales)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(ggiraph)\nlibrary(viridisLite)\nlibrary(labeling)\nlibrary(farver)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nImporting all Datasets\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\njanuary_2021 <- read_csv(\"202101-divvy-tripdata.csv\")\nfebruary_2021 <- read_csv(\"202102-divvy-tripdata.csv\")\nmarch_2021 <- read_csv(\"202103-divvy-tripdata.csv\")\napril_2021 <- read_csv(\"202104-divvy-tripdata.csv\")\nmay_2021 <- read_csv(\"202105-divvy-tripdata.csv\")\njune_2021<- read_xlsx(\"202106-divvy-tripdata.xlsx\")\njuly_2021<- read_xlsx(\"202107-divvy-tripdata.xlsx\")\naugust_2021 <- read_xlsx(\"202108-divvy-tripdata.xlsx\")\nseptember_2021 <- read_xlsx(\"202109-divvy-tripdata.xlsx\")\noctober_2021 <- read_xlsx(\"202110-divvy-tripdata.xlsx\")\nnovember_2021 <- read_csv(\"202111-divvy-tripdata.csv\")\ndecember_2021 <- read_csv(\"202112-divvy-tripdata.csv\")\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nBinding all datasets years wise into one using do.call() , rbind , and list() function:\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021 <- do.call(\"rbind\",list( january_2021, february_2021, march_2021,april_2021, may_2021, june_2021,july_2021,august_2021,\n                                           september_2021,october_2021,november_2021,december_2021))\n```\n:::\n\n\n## [PROCESS PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nAccumulating datasets for cleaning and preparing for the analysis.\n\n</p>\n\n### Key Task {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Checking for any errors or missing values within datasets.\n\n-   Removing duplicates and outliers from datasets.\n\n-   Selecting the right tools to perform these operations.\n\n-   Creating a backup of original data in case any crucial information gets eradicated during the cleaning process.\n\n-   Transform the data in a desired workable format.\n\n</ul>\n\n### Deliverable {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Applying some crucial changes to the dataset, such as changing datatype,using various functions to calculate values.\n\n-   Manipulating data by performing various computations as required.\n\n-   Stating each computation use case along with a final preview of the entire changes made.\n\n-   Documenting the step by step process in detail.\n\n</ul>\n\n### [CODE CHUNK]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving duplicated rows and coulmns.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021 <- all_datasets_2021[!duplicated(all_datasets_2021), ]\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving incomplete data through complete.cases().\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021<- all_datasets_2021[complete.cases(all_datasets_2021), ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021[complete.cases(all_datasets_2021), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4,588,302 × 13\n   ride_id          rideable_type started_at          ended_at           \n   <chr>            <chr>         <dttm>              <dttm>             \n 1 B9F73448DFBE0D45 classic_bike  2021-01-24 19:15:38 2021-01-24 19:22:51\n 2 457C7F4B5D3DA135 electric_bike 2021-01-23 12:57:38 2021-01-23 13:02:10\n 3 57C750326F9FDABE electric_bike 2021-01-09 15:28:04 2021-01-09 15:37:51\n 4 4D518C65E338D070 electric_bike 2021-01-09 15:28:57 2021-01-09 15:37:54\n 5 9D08A3AFF410474D classic_bike  2021-01-24 15:56:59 2021-01-24 16:07:08\n 6 49FCE1F8598F12C6 electric_bike 2021-01-22 15:15:28 2021-01-22 15:36:01\n 7 0FEED5C2C8749A1C classic_bike  2021-01-05 10:33:12 2021-01-05 10:39:12\n 8 E276FD43BDED6420 classic_bike  2021-01-30 11:59:16 2021-01-30 12:03:44\n 9 88BFCF66C2D585EC electric_bike 2021-01-27 07:27:09 2021-01-27 07:45:32\n10 8BD6F6510F5C8BD2 electric_bike 2021-01-15 08:54:41 2021-01-15 09:11:46\n# ℹ 4,588,292 more rows\n# ℹ 9 more variables: start_station_name <chr>, start_station_id <chr>,\n#   end_station_name <chr>, end_station_id <chr>, start_lat <dbl>,\n#   start_lng <dbl>, end_lat <dbl>, end_lng <dbl>, member_casual <chr>\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nSplit date from a column using as.date() function.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor started_at column\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$date<-as.Date(all_datasets_2021$started_at)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor ended_at column.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$date_of_arrival<-as.Date(all_datasets_2021$ended_at)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRenaming columns in a dataset.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021<- rename(all_datasets_2021,date_of_journey = date)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nExtracting Months from date.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$month <- as.character(months(all_datasets_2021$date_of_journey))\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nSplit time from a column using as.POSIXCT()\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor started_at column\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$journey_departure_time<-format(as.POSIXct(all_datasets_2021$started_at),\n                                                  format = \"%H:%M:%S\")\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nConverting POSIXCT() function class 'character' to hms & difftime in order to perform calculations.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$departure_time<-as_hms(all_datasets_2021$journey_departure_time)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor ended_at column\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$journey_arrival_time<-format(as.POSIXct(all_datasets_2021$ended_at),\n                                                format = \"%H:%M:%S\")\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nConverting POSIXCT() function class 'character' to hms & difftime in order to perform calculations.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$arrival_time<-as_hms(all_datasets_2021$journey_arrival_time)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nDeleting columns from dataset.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor started_at column.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$started_at <- NULL\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor ended_at column.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$ended_at <- NULL\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor journey_departure_time\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$journey_departure_time <-NULL\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor journey_arrival_time.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$journey_arrival_time <- NULL\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nFor removing dataset.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremove(january_2021)\nremove(february_2021)\nremove(march_2021)\nremove(april_2021)\nremove(may_2021)\nremove(june_2021)\nremove(july_2021)\nremove(august_2021)\nremove(september_2021)\nremove(october_2021)\nremove(november_2021)\nremove(december_2021)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nDifference between time using difftime() in terms of hours.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$total_mins<- difftime(all_datasets_2021$arrival_time,all_datasets_2021$departure_time ,units = \"hours\")\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTo remove negative time difference we converted the difference into absolute value which is positive using abs().\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nAs cannot be negative in real so decided to convert it into absolute values.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$total_mins_spent <- abs(all_datasets_2021$total_mins)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\ncleaning all spaces in between each column name.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021<- all_datasets_2021 %>% \n  janitor::clean_names()\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving total_mins column.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$total_mins <- NULL\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nCreating a separate column for weekdays of journey using weekdays().\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$day_of_journey <- weekdays(all_datasets_2021$date_of_journey)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nCreating a separate column for weekdays of arrival using weekdays().\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$day_of_arrival <- weekdays(all_datasets_2021$date_of_arrival)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nCalculating the riders total distance travelled using geosphere() and spatialrisk() package.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$total <- spatialrisk::haversine(all_datasets_2021$start_lat,all_datasets_2021$start_lng,all_datasets_2021$end_lat,all_datasets_2021$end_lng)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving all the columns with zero input by converting all those columns into na's using na_if() function.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$distance <- na_if(all_datasets_2021$total, 0)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nDistance computed is in default 'meter' format, so converting it into 'km' by dividing entire column by 1000.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$total_distance <- all_datasets_2021$distance / 1000\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving two column from dataset.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving distance column.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$distance <- NULL\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nRemoving total column\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021$total <- NULL\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nApplying na.omit() for removing all NA values from dataset.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021 <- na.omit(all_datasets_2021)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nConverting this new dataset into data frame using data.frame() function to perform all sort of computation.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_datasets_2021 <- data.frame(all_datasets_2021)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nSummary Of data.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(all_datasets_2021)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   ride_id          rideable_type      start_station_name start_station_id  \n Length:4311315     Length:4311315     Length:4311315     Length:4311315    \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n end_station_name   end_station_id       start_lat       start_lng     \n Length:4311315     Length:4311315     Min.   :41.65   Min.   :-87.83  \n Class :character   Class :character   1st Qu.:41.88   1st Qu.:-87.66  \n Mode  :character   Mode  :character   Median :41.90   Median :-87.64  \n                                       Mean   :41.90   Mean   :-87.64  \n                                       3rd Qu.:41.93   3rd Qu.:-87.63  \n                                       Max.   :42.06   Max.   :-87.53  \n    end_lat         end_lng       member_casual      date_of_journey     \n Min.   :41.65   Min.   :-87.83   Length:4311315     Min.   :2021-01-01  \n 1st Qu.:41.88   1st Qu.:-87.66   Class :character   1st Qu.:2021-06-05  \n Median :41.90   Median :-87.64   Mode  :character   Median :2021-07-29  \n Mean   :41.90   Mean   :-87.64                      Mean   :2021-07-25  \n 3rd Qu.:41.93   3rd Qu.:-87.63                      3rd Qu.:2021-09-19  \n Max.   :42.17   Max.   :-87.52                      Max.   :2021-12-31  \n date_of_arrival         month           departure_time    arrival_time     \n Min.   :2021-01-01   Length:4311315     Length:4311315    Length:4311315   \n 1st Qu.:2021-06-05   Class :character   Class1:hms        Class1:hms       \n Median :2021-07-29   Mode  :character   Class2:difftime   Class2:difftime  \n Mean   :2021-07-25                      Mode  :numeric    Mode  :numeric   \n 3rd Qu.:2021-09-19                                                         \n Max.   :2022-01-03                                                         \n total_mins_spent  day_of_journey     day_of_arrival     total_distance    \n Length:4311315    Length:4311315     Length:4311315     Min.   : 0.00002  \n Class :difftime   Class :character   Class :character   1st Qu.: 1.02524  \n Mode  :numeric    Mode  :character   Mode  :character   Median : 1.71917  \n                                                         Mean   : 2.26815  \n                                                         3rd Qu.: 2.91957  \n                                                         Max.   :33.83804  \n```\n:::\n\n```{.r .cell-code}\nstr(all_datasets_2021)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t4311315 obs. of  20 variables:\n $ ride_id           : chr  \"B9F73448DFBE0D45\" \"457C7F4B5D3DA135\" \"57C750326F9FDABE\" \"4D518C65E338D070\" ...\n $ rideable_type     : chr  \"classic_bike\" \"electric_bike\" \"electric_bike\" \"electric_bike\" ...\n $ start_station_name: chr  \"California Ave & Cortez St\" \"California Ave & Cortez St\" \"California Ave & Cortez St\" \"California Ave & Cortez St\" ...\n $ start_station_id  : chr  \"17660\" \"17660\" \"17660\" \"17660\" ...\n $ end_station_name  : chr  \"Wood St & Augusta Blvd\" \"California Ave & North Ave\" \"Wood St & Augusta Blvd\" \"Wood St & Augusta Blvd\" ...\n $ end_station_id    : chr  \"657\" \"13258\" \"657\" \"657\" ...\n $ start_lat         : num  41.9 41.9 41.9 41.9 41.9 ...\n $ start_lng         : num  -87.7 -87.7 -87.7 -87.7 -87.7 ...\n $ end_lat           : num  41.9 41.9 41.9 41.9 41.9 ...\n $ end_lng           : num  -87.7 -87.7 -87.7 -87.7 -87.7 ...\n $ member_casual     : chr  \"member\" \"member\" \"casual\" \"casual\" ...\n $ date_of_journey   : Date, format: \"2021-01-24\" \"2021-01-23\" ...\n $ date_of_arrival   : Date, format: \"2021-01-24\" \"2021-01-23\" ...\n $ month             : chr  \"January\" \"January\" \"January\" \"January\" ...\n $ departure_time    : 'hms' num  19:15:38 12:57:38 15:28:04 15:28:57 ...\n  ..- attr(*, \"units\")= chr \"secs\"\n $ arrival_time      : 'hms' num  19:22:51 13:02:10 15:37:51 15:37:54 ...\n  ..- attr(*, \"units\")= chr \"secs\"\n $ total_mins_spent  : 'difftime' num  0.120277777777778 0.0755555555555556 0.163055555555556 0.149166666666667 ...\n  ..- attr(*, \"units\")= chr \"hours\"\n $ day_of_journey    : chr  \"Sunday\" \"Saturday\" \"Saturday\" \"Saturday\" ...\n $ day_of_arrival    : chr  \"Sunday\" \"Saturday\" \"Saturday\" \"Saturday\" ...\n $ total_distance    : num  2.03 1.12 2.04 2.04 2.03 ...\n```\n:::\n:::\n\n\n## [ANALYZE PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nIn this particular phase, I will start analysing the clean and processed dataset in order to find answers to many of the questions that will help stakeholders of a cyclistic company to take up on their marketing campaign in a specific direction which, in turn will lead to retaining existing members and converting all other forthcoming users to a subscription programme.\n\n</p>\n\n### Key Task {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Various sets of comparisons were made to deep dive into the dataset in order to understand the complete scenario of customer's behaviour and their preferences\n\n-   Series of analysis are performed to get the thorough details for the entire analysis and also lay down a path of conviction to answer existing and imminent intrigues.\n\n-   Aggregate several columns to explore the various aspects of the dataset and its significance in how people perceive cyclistic services.\n\n-   Examine every nook and cranny in the dataset using various built-in R functions to get the final profiling done for both the categories of customers.\n\n-   Identifying trends and relationships for each of the member types and their utility.\n\n</ul>\n\n### Deliverable {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Established summary through several useful functions such as 'head()', 'filter()','count()', 'glimpse()', etc.\n\n-   Computations performed will illustrate a complete brief on the utility of every member type in terms of their choices and their preferences.\n\n-   Some statistical operations are also performed to develop a brief on some crucial factors that influence people's conduct.\n\n</ul>\n\n### [CODE CHUNK]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nSummary of total_mins_spent column in terms of mean, median, max and min.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRide_duration_summary <- all_datasets_2021 %>% \n  summarize(average_ride_duration = mean(total_mins_spent), \n            min_ride_duration = min(total_mins_spent), \n            median_ride_duration = median(total_mins_spent),\n            max_ride_duration = max(total_mins_spent))\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTo get a overview of Ride_duration-summary.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(Ride_duration_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  average_ride_duration min_ride_duration median_ride_duration\n1       0.4311001 hours           0 hours      0.1997222 hours\n  max_ride_duration\n1       23.99 hours\n```\n:::\n\n```{.r .cell-code}\nglimpse(Ride_duration_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 4\n$ average_ride_duration <drtn> 0.4311001 hours\n$ min_ride_duration     <drtn> 0 hours\n$ median_ride_duration  <drtn> 0.1997222 hours\n$ max_ride_duration     <drtn> 23.99 hours\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nExtracting top 10 most visited stations via set of processing for member type.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nFiltering default dataset and creating a new one with filtered member type member.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_trips_member <- filter(all_datasets_2021, member_casual == \"member\")\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nAdding a new column using mutate () function from existing start_station_name column.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_trips_member<-all_trips_member %>% \n  mutate(route = paste(start_station_name,\"To\", sep = \" \"))\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nConcatenating existing column with newly created column using mutate() function.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_trips_member<-all_trips_member %>% \n  mutate(route = paste(route,end_station_name, sep = \" \"))\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nUsing pipe operator summarizing number of rides , mean of total_mins_spent grouping it by route and then arranging sequentially.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_ride_route_member <- all_trips_member %>% \n  group_by(route) %>% \n  summarize(number_of_rides = n(),average_duration_minutes = mean(total_mins_spent)) %>% \n  arrange(route,number_of_rides,average_duration_minutes)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nUsing pipe operator summarizing number of rides , mean of total_distance grouping it by route and then arranging sequentially for member type.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_distance_travelled_member <- all_trips_member %>% \n  group_by(route) %>% \n  summarize(number_of_rides = n(),average_distance = mean(total_distance)) %>% \n  arrange(route,number_of_rides,average_distance)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nStoring top ten station name for member type in desc order using head() function along with total duration spent.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_ride_route_member_top10 <- head(arrange(popular_ride_route_member,desc(number_of_rides)), n = 10)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nStoring top ten station name for member type in desc order using head() along with total distance travelled.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_ride_distance_member_top10 <- head(arrange(popular_distance_travelled_member,desc(number_of_rides)), n = 10)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGlance on newly obtained data.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_ride_route_member_top10\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   route                                  number_of_rides average_duration_min…¹\n   <chr>                                            <int> <drtn>                \n 1 Ellis Ave & 60th St To Ellis Ave & 55…            4082 0.10550989 hours      \n 2 Ellis Ave & 55th St To Ellis Ave & 60…            3652 0.11763394 hours      \n 3 Ellis Ave & 60th St To University Ave…            3109 0.13157196 hours      \n 4 University Ave & 57th St To Ellis Ave…            3010 0.12021290 hours      \n 5 Calumet Ave & 33rd St To State St & 3…            1989 0.06755684 hours      \n 6 State St & 33rd St To Calumet Ave & 3…            1954 0.09848971 hours      \n 7 Loomis St & Lexington St To Morgan St…            1860 0.09136798 hours      \n 8 Morgan St & Polk St To Loomis St & Le…            1653 0.11731717 hours      \n 9 MLK Jr Dr & 29th St To State St & 33r…            1422 0.21594116 hours      \n10 State St & 33rd St To MLK Jr Dr & 29t…            1392 0.21096384 hours      \n# ℹ abbreviated name: ¹​average_duration_minutes\n```\n:::\n\n```{.r .cell-code}\npopular_ride_distance_member_top10\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   route                                        number_of_rides average_distance\n   <chr>                                                  <int>            <dbl>\n 1 Ellis Ave & 60th St To Ellis Ave & 55th St              4082            1.02 \n 2 Ellis Ave & 55th St To Ellis Ave & 60th St              3652            1.02 \n 3 Ellis Ave & 60th St To University Ave & 57t…            3109            0.716\n 4 University Ave & 57th St To Ellis Ave & 60t…            3010            0.716\n 5 Calumet Ave & 33rd St To State St & 33rd St             1989            0.654\n 6 State St & 33rd St To Calumet Ave & 33rd St             1954            0.653\n 7 Loomis St & Lexington St To Morgan St & Pol…            1860            0.868\n 8 Morgan St & Polk St To Loomis St & Lexingto…            1653            0.867\n 9 MLK Jr Dr & 29th St To State St & 33rd St               1422            1.09 \n10 State St & 33rd St To MLK Jr Dr & 29th St               1392            1.09 \n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nExtracting top 10 most visited stations via set of processing for casual type.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nFiltering default dataset and creating a new one with filtered member type casual.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_trips_casual <- filter(all_datasets_2021, member_casual == \"casual\")\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nAdding a new column using mutate () function from existing start_station_name column.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_trips_casual<-all_trips_casual %>% \n  mutate(route = paste(start_station_name,\"To\", sep = \" \"))\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nConcatenating existing column with newly created column using mutate() function.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_trips_casual<-all_trips_casual %>% \n  mutate(route = paste(route,end_station_name, sep = \" \"))\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nUsing pipe operator summarizing number of rides , mean of total_mins_spent grouping it by route and then arranging sequentially.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_ride_route_casual <- all_trips_casual %>% \n  group_by(route) %>% \n  summarize(number_of_rides = n(),average_duration_minutes = mean(total_mins_spent)) %>% \n  arrange(route,number_of_rides,average_duration_minutes)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nUsing pipe operator summarizing number of rides , mean of total_distance grouping it by route and then arranging sequentially for casual type.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_distance_travelled_casual <- all_trips_casual %>% \n  group_by(route) %>% \n  summarize(number_of_rides = n(),average_distance = mean(total_distance)) %>% \n  arrange(route,number_of_rides,average_distance)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nStoring top ten station name for casual member type in desc order using head() function along with total duration spent.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_ride_route_casual_top10 <- head(arrange(popular_ride_route_casual,desc(number_of_rides)), n = 10)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nStoring top ten station name for casual member type in desc order using head() along with total distance travelled.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_ride_distance_casual_top10 <- head(arrange(popular_distance_travelled_casual,desc(number_of_rides)), n = 10)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGlance on newly obtained data.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_ride_route_casual_top10\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   route                                  number_of_rides average_duration_min…¹\n   <chr>                                            <int> <drtn>                \n 1 Streeter Dr & Grand Ave To Millennium…            3309 0.6745699 hours       \n 2 Millennium Park To Streeter Dr & Gran…            2927 0.7638985 hours       \n 3 Shedd Aquarium To Streeter Dr & Grand…            2822 0.5835661 hours       \n 4 Lake Shore Dr & Monroe St To Streeter…            2811 0.5459834 hours       \n 5 DuSable Lake Shore Dr & Monroe St To …            2736 0.4910627 hours       \n 6 Streeter Dr & Grand Ave To Michigan A…            2478 0.4997076 hours       \n 7 Dusable Harbor To Streeter Dr & Grand…            2280 0.4592548 hours       \n 8 Michigan Ave & Oak St To Streeter Dr …            2008 0.5707716 hours       \n 9 Streeter Dr & Grand Ave To Theater on…            1951 0.5780373 hours       \n10 Shedd Aquarium To Millennium Park                 1818 0.4921353 hours       \n# ℹ abbreviated name: ¹​average_duration_minutes\n```\n:::\n\n```{.r .cell-code}\npopular_ride_distance_casual_top10\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   route                                        number_of_rides average_distance\n   <chr>                                                  <int>            <dbl>\n 1 Streeter Dr & Grand Ave To Millennium Park              3309            1.60 \n 2 Millennium Park To Streeter Dr & Grand Ave              2927            1.60 \n 3 Shedd Aquarium To Streeter Dr & Grand Ave               2822            2.80 \n 4 Lake Shore Dr & Monroe St To Streeter Dr & …            2811            1.32 \n 5 DuSable Lake Shore Dr & Monroe St To Street…            2736            1.32 \n 6 Streeter Dr & Grand Ave To Michigan Ave & O…            2478            1.37 \n 7 Dusable Harbor To Streeter Dr & Grand Ave               2280            0.593\n 8 Michigan Ave & Oak St To Streeter Dr & Gran…            2008            1.37 \n 9 Streeter Dr & Grand Ave To Theater on the L…            1951            4.09 \n10 Shedd Aquarium To Millennium Park                       1818            1.70 \n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nRemoving some of the dataset that were created to fetch some specific data.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremove(all_trips_casual)\nremove(all_trips_member)\nremove(popular_ride_route_casual)\nremove(popular_ride_route_member)\nremove(popular_distance_travelled_casual)\nremove(popular_distance_travelled_member)\n```\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTaking a glance on start_station_name with respect to member_casual in descending order limited up to twenty entries.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,start_station_name,member_casual,sort = TRUE), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          start_station_name member_casual     n\n1    Streeter Dr & Grand Ave        casual 54225\n2            Millennium Park        casual 26847\n3      Michigan Ave & Oak St        casual 23614\n4          Clark St & Elm St        member 23200\n5   Kingsbury St & Kinzie St        member 22277\n6      Wells St & Concord Ln        member 22245\n7             Shedd Aquarium        casual 20070\n8          Wells St & Elm St        member 19663\n9      Dearborn St & Erie St        member 18259\n10     Wells St & Concord Ln        casual 18201\n11       Wells St & Huron St        member 17845\n12    St. Clair St & Erie St        member 17760\n13       Theater on the Lake        casual 17706\n14      Broadway & Barry Ave        member 16232\n15   Clinton St & Madison St        member 16058\n16 Desplaines St & Kinzie St        member 15775\n17   Clark St & Armitage Ave        member 15478\n18    Wabash Ave & Grand Ave        member 15432\n19    Clark St & Lincoln Ave        member 15312\n20    Clark St & Lincoln Ave        casual 15250\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTaking a glance on end_station_name with respect to member_casual in ascending order limited up to twenty entries.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,end_station_name,member_casual,sort = TRUE), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     end_station_name member_casual     n\n1             Streeter Dr & Grand Ave        casual 57303\n2                     Millennium Park        casual 28406\n3               Michigan Ave & Oak St        casual 25317\n4                   Clark St & Elm St        member 23273\n5               Wells St & Concord Ln        member 22892\n6            Kingsbury St & Kinzie St        member 22462\n7                   Wells St & Elm St        member 20218\n8                 Theater on the Lake        casual 19393\n9               Dearborn St & Erie St        member 18918\n10                     Shedd Aquarium        casual 18684\n11              Wells St & Concord Ln        casual 17939\n12             St. Clair St & Erie St        member 17587\n13                Wells St & Huron St        member 17508\n14               Broadway & Barry Ave        member 16815\n15            Clinton St & Madison St        member 16412\n16              Green St & Madison St        member 15949\n17             Clark St & Lincoln Ave        casual 15504\n18         Lake Shore Dr & North Blvd        casual 15474\n19 DuSable Lake Shore Dr & North Blvd        casual 15420\n20             Clark St & Lincoln Ave        member 15051\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTaking a glance on total count by filtering and comparing start_station_name and end_station_name with respect to member_casual in ascending order up to twenty entries.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(filter(all_datasets_2021,start_station_name == end_station_name),member_casual,sort = TRUE), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  member_casual     n\n1        casual 38301\n2        member 22798\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nLooking for a new gleam by filtering and comparing start_station_name and end_station_name along with a preview of start_station_name with respect to member_casual in ascending order limited to twenty entries.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(filter(all_datasets_2021,start_station_name == end_station_name),start_station_name,member_casual,sort = TRUE), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                  start_station_name member_casual    n\n1            Streeter Dr & Grand Ave        casual 1458\n2              Michigan Ave & Oak St        casual  852\n3                    Millennium Park        casual  773\n4         Indiana Ave & Roosevelt Rd        casual  552\n5                Buckingham Fountain        casual  476\n6          Lake Shore Dr & Monroe St        casual  474\n7              Dearborn St & Erie St        member  458\n8                     Shedd Aquarium        casual  456\n9  DuSable Lake Shore Dr & Monroe St        casual  397\n10                    Dusable Harbor        casual  392\n11                   Montrose Harbor        casual  377\n12             Michigan Ave & 8th St        casual  375\n13              New St & Illinois St        casual  339\n14         Columbus Dr & Randolph St        casual  321\n15               Theater on the Lake        casual  305\n16               Wabash Ave & 9th St        casual  282\n17                 Adler Planetarium        casual  271\n18   Lakefront Trail & Bryn Mawr Ave        casual  267\n19          Fairbanks Ct & Grand Ave        casual  258\n20            Michigan Ave & Lake St        casual  253\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGetting a preview by counting start_station_name with respect to day_of_journey by sorting it in ascending order limited to twenty entries.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,start_station_name,day_of_journey,sort = TRUE),n=20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        start_station_name day_of_journey     n\n1  Streeter Dr & Grand Ave       Saturday 17218\n2  Streeter Dr & Grand Ave         Sunday 14957\n3  Streeter Dr & Grand Ave         Friday  9319\n4    Wells St & Concord Ln       Saturday  8560\n5    Michigan Ave & Oak St       Saturday  8508\n6  Streeter Dr & Grand Ave         Monday  8322\n7          Millennium Park       Saturday  7981\n8   Clark St & Lincoln Ave       Saturday  7956\n9    Michigan Ave & Oak St         Sunday  7688\n10     Theater on the Lake       Saturday  7449\n11     Theater on the Lake         Sunday  7380\n12         Millennium Park         Sunday  7180\n13       Clark St & Elm St       Saturday  6994\n14 Clark St & Armitage Ave       Saturday  6799\n15       Wells St & Elm St       Saturday  6645\n16 Streeter Dr & Grand Ave      Wednesday  6596\n17   Wells St & Concord Ln         Sunday  6591\n18 Streeter Dr & Grand Ave        Tuesday  6272\n19 Streeter Dr & Grand Ave       Thursday  6236\n20   Wells St & Concord Ln         Friday  5982\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTaking a glance on dataset by counting start_station_name, day_of_journey with respect to months alongside sorting the computation in ascending order limited upto twenty entries.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,start_station_name,day_of_journey, month,sort = TRUE),n=20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   start_station_name day_of_journey     month    n\n1             Streeter Dr & Grand Ave       Saturday      July 3762\n2             Streeter Dr & Grand Ave         Sunday    August 2685\n3             Streeter Dr & Grand Ave         Sunday      June 2613\n4             Streeter Dr & Grand Ave       Saturday    August 2572\n5             Streeter Dr & Grand Ave       Saturday September 2560\n6             Streeter Dr & Grand Ave         Sunday      July 2459\n7             Streeter Dr & Grand Ave       Saturday      June 2433\n8             Streeter Dr & Grand Ave       Saturday       May 2392\n9             Streeter Dr & Grand Ave         Sunday       May 2276\n10            Streeter Dr & Grand Ave         Sunday September 2196\n11            Streeter Dr & Grand Ave         Friday      July 2136\n12 DuSable Lake Shore Dr & North Blvd       Saturday    August 1882\n13 DuSable Lake Shore Dr & North Blvd         Sunday    August 1844\n14            Streeter Dr & Grand Ave         Monday      July 1819\n15              Michigan Ave & Oak St       Saturday      July 1664\n16            Streeter Dr & Grand Ave         Friday    August 1654\n17                Theater on the Lake         Sunday    August 1636\n18            Streeter Dr & Grand Ave         Friday      June 1632\n19         Lake Shore Dr & North Blvd         Sunday      June 1588\n20         Lake Shore Dr & North Blvd       Saturday      June 1578\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nPreviewing and pulling out the peak hours from departure time along with weekdays limited up to twenty entries.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,departure_time,day_of_journey,sort = TRUE),n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   departure_time day_of_journey  n\n1        17:09:44      Wednesday 40\n2        17:35:20        Tuesday 39\n3        14:17:03       Saturday 38\n4        17:55:16        Tuesday 38\n5        18:05:35      Wednesday 38\n6        17:06:41      Wednesday 37\n7        17:12:19      Wednesday 37\n8        17:16:59      Wednesday 37\n9        17:35:39        Tuesday 37\n10       17:10:37        Tuesday 36\n11       17:14:20      Wednesday 36\n12       17:17:39        Tuesday 36\n13       17:18:18         Friday 36\n14       17:25:52      Wednesday 36\n15       18:09:28        Tuesday 36\n16       12:46:09       Saturday 35\n17       13:42:30       Saturday 35\n18       17:06:54      Wednesday 35\n19       17:09:27      Wednesday 35\n20       17:12:59        Tuesday 35\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nPreviewing and pulling out the peak hours from arrival time along with weekdays limited up to twenty entries.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,arrival_time,day_of_arrival,sort = TRUE), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   arrival_time day_of_arrival  n\n1      17:21:00      Wednesday 39\n2      17:29:39         Friday 39\n3      17:15:14        Tuesday 38\n4      18:17:16        Tuesday 37\n5      17:27:01      Wednesday 36\n6      17:52:40         Monday 36\n7      15:06:53       Saturday 35\n8      15:55:42         Sunday 35\n9      17:21:44        Tuesday 35\n10     17:25:55      Wednesday 35\n11     17:34:27        Tuesday 35\n12     17:54:36      Wednesday 35\n13     17:57:11        Tuesday 35\n14     17:58:25      Wednesday 35\n15     18:19:47      Wednesday 35\n16     18:21:23      Wednesday 35\n17     18:27:55      Wednesday 35\n18     16:55:01       Saturday 34\n19     17:16:38       Thursday 34\n20     17:21:35      Wednesday 34\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nDividing into very specific information using count to identify number of rides happened each weekday followed by types of members.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(all_datasets_2021, day_of_journey , member_casual,sort = FALSE),n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   day_of_journey member_casual      n\n1          Friday        casual 267099\n2          Friday        member 353772\n3          Monday        casual 204519\n4          Monday        member 333892\n5        Saturday        casual 426554\n6        Saturday        member 343383\n7          Sunday        casual 360264\n8          Sunday        member 297656\n9        Thursday        casual 206866\n10       Thursday        member 361814\n11        Tuesday        casual 194990\n12        Tuesday        member 375621\n13      Wednesday        casual 199595\n14      Wednesday        member 385290\n```\n:::\n\n```{.r .cell-code}\nhead(count(all_datasets_2021, day_of_arrival , member_casual,sort = FALSE),n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   day_of_arrival member_casual      n\n1          Friday        casual 264993\n2          Friday        member 353095\n3          Monday        casual 205449\n4          Monday        member 333960\n5        Saturday        casual 424590\n6        Saturday        member 343092\n7          Sunday        casual 363926\n8          Sunday        member 298948\n9        Thursday        casual 206226\n10       Thursday        member 361650\n11        Tuesday        casual 195001\n12        Tuesday        member 375520\n13      Wednesday        casual 199702\n14      Wednesday        member 385163\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nTaking a glance on distinct values of these column to understand assigned allocation of its sub-category using table function.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(all_datasets_2021$rideable_type) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n classic_bike   docked_bike electric_bike \n      3032819        247001       1031495 \n```\n:::\n\n```{.r .cell-code}\ntable(all_datasets_2021$member_casual)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n casual  member \n1859887 2451428 \n```\n:::\n\n```{.r .cell-code}\ntable(all_datasets_2021$month)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n    April    August  December  February   January      July      June     March \n   273783    635053    170679     40206     79809    647972    565822    189425 \n      May  November   October September \n   415840    247404    457316    588006 \n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nChecking on ratio of rideable type sub category with member type to get a gleam on the distribution.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,rideable_type,member_casual,sort = TRUE), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  rideable_type member_casual       n\n1  classic_bike        member 1892943\n2  classic_bike        casual 1139876\n3 electric_bike        member  558484\n4 electric_bike        casual  473011\n5   docked_bike        casual  247000\n6   docked_bike        member       1\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGlimpse of the maximum distance travelled by a rider using max function.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(max(all_datasets_2021$total_distance), sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 33.83804\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGlimpse of the dataset through counting total_distance and month using sort function limited upto twenty entries.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,total_distance, month, sort = FALSE), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   total_distance     month n\n1    2.313061e-05  December 1\n2    3.329401e-05  December 1\n3    3.334390e-05    August 1\n4    3.710650e-05       May 1\n5    3.959636e-05    August 1\n6    4.011380e-05  December 1\n7    4.142217e-05 September 1\n8    4.537711e-05      June 1\n9    4.628751e-05      July 1\n10   5.562038e-05  November 1\n11   6.215622e-05  November 1\n12   6.216103e-05   October 1\n13   6.651749e-05      July 1\n14   6.938482e-05      July 1\n15   6.941745e-05  November 1\n16   7.148173e-05 September 1\n17   7.548541e-05      July 1\n18   7.834863e-05    August 1\n19   7.837490e-05  November 1\n20   7.842347e-05   October 1\n```\n:::\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,max(total_distance), month, sort = FALSE), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   max(total_distance)     month      n\n1             33.83804     April 273783\n2             33.83804    August 635053\n3             33.83804  December 170679\n4             33.83804  February  40206\n5             33.83804   January  79809\n6             33.83804      July 647972\n7             33.83804      June 565822\n8             33.83804     March 189425\n9             33.83804       May 415840\n10            33.83804  November 247404\n11            33.83804   October 457316\n12            33.83804 September 588006\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nGlimpse of the dataset based on the total_mins\\_ spent column and month followed by membership type in descending and ascending order limited upto 30 entries maximum.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,total_mins_spent, month, sort = TRUE), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   total_mins_spent     month   n\n1  0.12055556 hours    August 643\n2  0.10694444 hours    August 641\n3  0.11222222 hours    August 636\n4  0.14472222 hours    August 636\n5  0.10861111 hours    August 633\n6  0.11444444 hours    August 628\n7  0.10583333 hours    August 627\n8  0.09361111 hours    August 622\n9  0.12388889 hours    August 620\n10 0.11000000 hours    August 619\n11 0.09694444 hours    August 618\n12 0.11611111 hours    August 618\n13 0.09527778 hours September 617\n14 0.11361111 hours    August 617\n15 0.10027778 hours    August 616\n16 0.11250000 hours September 616\n17 0.12777778 hours    August 616\n18 0.11833333 hours    August 615\n19 0.11527778 hours      July 614\n20 0.12361111 hours    August 614\n```\n:::\n\n```{.r .cell-code}\nhead(count(all_datasets_2021,max(total_mins_spent), month,member_casual, sort = TRUE), n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   max(total_mins_spent)     month member_casual      n\n1            23.99 hours      July        casual 336693\n2            23.99 hours    August        member 321251\n3            23.99 hours September        member 317155\n4            23.99 hours    August        casual 313802\n5            23.99 hours      July        member 311279\n6            23.99 hours      June        member 293113\n7            23.99 hours   October        member 280003\n8            23.99 hours      June        casual 272709\n9            23.99 hours September        casual 270851\n10           23.99 hours       May        member 225037\n11           23.99 hours       May        casual 190803\n12           23.99 hours  November        member 181237\n13           23.99 hours   October        casual 177313\n14           23.99 hours     April        member 170269\n15           23.99 hours  December        member 128318\n16           23.99 hours     March        member 124581\n17           23.99 hours     April        casual 103514\n18           23.99 hours   January        member  66550\n19           23.99 hours  November        casual  66167\n20           23.99 hours     March        casual  64844\n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nChecking Quantile values and performing winsorization on the dataset.\n\n</p>\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nFor total_mins_spent column.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquantile(all_datasets_2021$total_mins_spent,probs = seq(.99,1.0,by=0.001))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime differences in hours\n      99%     99.1%     99.2%     99.3%     99.4%     99.5%     99.6%     99.7% \n 2.604444  2.847271  3.223889  4.272445  9.228217 21.973294 23.175762 23.525849 \n    99.8%     99.9%      100% \n23.691944 23.805278 23.990000 \n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nFor total_distance column.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquantile(all_datasets_2021$total_distance,probs = seq(.75,1.0,by=.05))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      75%       80%       85%       90%       95%      100% \n 2.919568  3.326758  3.858654  4.599971  5.895091 33.838043 \n```\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nFetching data using specific member type along with day_of_journey and max of total mins spent column limited upto twenty entries.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(count(filter(all_datasets_2021,member_casual == 'casual'),member_casual,day_of_journey,max(total_mins_spent),sort = TRUE),n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  member_casual day_of_journey max(total_mins_spent)      n\n1        casual       Saturday           23.99 hours 426554\n2        casual         Sunday           23.99 hours 360264\n3        casual         Friday           23.99 hours 267099\n4        casual       Thursday           23.99 hours 206866\n5        casual         Monday           23.99 hours 204519\n6        casual      Wednesday           23.99 hours 199595\n7        casual        Tuesday           23.99 hours 194990\n```\n:::\n\n```{.r .cell-code}\nhead(count(filter(all_datasets_2021,member_casual == 'member'),member_casual,day_of_journey,max(total_mins_spent),sort = TRUE),n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  member_casual day_of_journey max(total_mins_spent)      n\n1        member      Wednesday         23.9825 hours 385290\n2        member        Tuesday         23.9825 hours 375621\n3        member       Thursday         23.9825 hours 361814\n4        member         Friday         23.9825 hours 353772\n5        member       Saturday         23.9825 hours 343383\n6        member         Monday         23.9825 hours 333892\n7        member         Sunday         23.9825 hours 297656\n```\n:::\n:::\n\n\n## [SHARE PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n### Key Task {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Establish the best way to share visualization using R and tableau.\n\n-   Illustrate every minute detail backed with explanation.\n\n-   Choose adequate graph type to conclude findings along with legends, labels and heading to improve readability and interpretation.\n\n-   Ensure work is easily accessible.\n\n</ul>\n\n### Deliverable {style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Convey findings accompanied with illustration and explanation.\n\n-   Put a short description of every visualization added under this phase.\n\n</ul>\n\n### [VISUALIZATION]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nHere we are trying to look through overall distribution of members types based on total duration spent on weekdays.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = all_datasets_2021)+ aes(x = day_of_journey, y = as.numeric(total_mins_spent),fill = member_casual) + \n  geom_bar(stat = \"identity\", width = 0.5, position = 'stack') + scale_fill_manual(values = c(\"red\", \"blue\")) +\nlabs(title = \"Cyclistic Data: Week Day Vs Total Duration Spent\",x = \"Weekday of Journey\", \n     y = \"Total Duration\",fill = \"Member Type\") + theme(axis.text.x = element_text(angle = 60,hjust = 1)) + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-70-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nHere getting a glimpse on the utilization of rideable type by member type and then distributed across weekdays.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = all_datasets_2021) +  (mapping =  aes(x = member_casual, fill = rideable_type)) + \n  geom_bar(width = 0.5, alpha = 2.5) + facet_wrap(~day_of_journey) + \n  scale_fill_manual(values = c(\"Black\", \" yellow\", \"green\")) +\n  labs(title = \"Cyclistic Data: Member Type preference WIth Rideable Type\",x = \"Member Type\", \n       y = \"No. of Count\",fill = \"Rideable Type\") +\n  theme(axis.text.x = element_text(angle = 60,hjust = 1)) + theme_classic()\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-71-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nGlimpse on the member type based on total duration spent on total distance travelled.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot( data = all_datasets_2021) + \n  aes(x = hms::as_hms(total_mins_spent), y = total_distance, shape = member_casual,color = member_casual) +\n  scale_color_manual(name = \"Member Type\",values = c(\"Black\", \" Purple\")) + \n  scale_shape_manual(name = \"Member Type\",values = c(19,17)) + \n  geom_point(size = 3,alpha = 0.5,stroke = 1)+\n  labs(title = \"Cyclistic Data: Total Minutes spent with Total Distance Travelled\",\n       caption = \"Comparing the Difference by Member Type\",x = \"Total Minutes Spent\", y = \"Total Distance Travelled\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-72-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTaking a look on top 10 stations based on average duration spent by casual member type.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot( data = popular_ride_route_casual_top10) + aes(x = as_hms(average_duration_minutes) ,y = route, group = 1) + \n  geom_line(color=\"Red\") + geom_point(shape=21, color=\"black\", fill=\"blue\", size=6) +\n  labs( title = \"Top 10 Most Visited Stations\",subtitle = \"For Casual Riders\", \n        x = \"Duration Spent (In Hours)\", y = \"Station Name\", \n        caption = \"Popularity of stations is determined by no of rides & average distance travelled\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-73-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTaking a look on top 10 stations based on average duration spent by subscribed member type.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot( data = popular_ride_route_member_top10) + aes(x = as_hms(average_duration_minutes) ,y = route, group = 1) + \n  geom_line(color=\"green\") + geom_point(shape=21, color=\"black\", fill=\"Brown\", size=6) +\n  labs( title = \"Top 10 Most Visited Stations\",subtitle = \"For Membership Riders\", \n        x = \"Duration Spent (In Hours)\", y = \"Station Name\", \n        caption = \"Popularity of stations is determined by no of rides & average distance travelled\") +theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-74-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTaking a look on top 10 stations based on average distance travelled by casual member type.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = popular_ride_distance_casual_top10) + aes(x = average_distance, y = route, group = 1) +\n  geom_line(color=\"orange\") +geom_point(shape = 21, color = \"black\", fill = \"dark green\", size = 6) + \n  labs( title = \"Top 10 Most Visited Stations\",subtitle = \"For Casual Riders\", \n        x = \"Duration Spent (In Hours)\", y = \"Station Name\",\n        caption = \"Popularity of stations is determined by no of rides & average time spent\") +theme_light()\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-75-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTaking a look on top 10 stations based on average distance travelled by subscribed member type.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = popular_ride_distance_member_top10) + aes(x = average_distance, y = route, group = 1) + geom_line(color=\"orange\") +\n  geom_point(shape = 21, color = \"black\", fill = \"dark green\", size = 6) + \n  labs( title = \"Top 10 Most Visited Stations\",subtitle = \"For Membership Riders\", \n        x = \"Duration Spent (In Hours)\", y = \"Station Name\", \n        caption = \"Popularity of stations is determined by no of rides & average time spent\") +theme_ipsum()\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-76-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nOverview on the distribution split of member type based on each weekdays of every month.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = all_datasets_2021) + geom_col(aes(x = day_of_journey,y = month, fill = member_casual), position = \"identity\") + \n  scale_fill_manual(values = c(\"blue\",\"red\")) + labs(title = \"Busiest WeekDay of The Month\", \nsubtitle = \" Followed By Member Type\", x = \"Day of Journey\" , y = \"Month\", fill = \"Member Type\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-77-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nGetting a snap on overall allocation of total duration spent on every month based on each weekdays.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = all_datasets_2021) + geom_col(mapping = aes(x = month, y = as.numeric(as.difftime(total_mins_spent)),\n  fill = day_of_journey)) + \n  scale_fill_manual(values = c(\"blue\", \"Orange\",\"Dark Green\",\"violet\",\"Red\",\"Brown\",\"black\")) + \n  labs(title = \"Monthly time duration spent\", subtitle = \"Followed By Weekday\", x = \"Total Time Duration\",\n  y =\" Month\", fill = \" Day of Journey\") + \n  theme(axis.text.x = element_text(angle = 40, vjust = 0.5, hjust=1))\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-78-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nOverview of total distance travelled by each member type on every month.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = all_datasets_2021) + aes(x = month, y = total_distance, fill = member_casual) + \n  geom_bar(stat =\"identity\",position = \"dodge\") + scale_fill_manual(values = c(\"blue\",\"orange\"))+\n  labs(title = \"Distance Travelled by Month\", subtitle = \"Followed by Member Type\", x = \" Month\",\n       y = \"Total Distance\", fill = \"Member Type\") +  \n  theme(axis.text.x = element_text(angle = 40, vjust = 0.5, hjust=1),\n        plot.background = element_rect(fill = \"#D2B48C\"))\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-79-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nTaking a glance on rideable type distribution on each weekdays of every month.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = all_datasets_2021) + aes(x = day_of_journey, y = month) + \n  geom_col(aes(fill = rideable_type),width = .5,position = 'identity') + \n  scale_fill_manual(values = c(\"Red\",\"Blue\",\"Dark green\"))+\n  labs(title = \"Number of Rides Per Weeek\",subtitle = \"Followed By Rideable Type\",\n       x =\"Month\", y = \"Day Of Journey\", fill = \"Rideable Type\") +\n  theme(axis.text.x = element_text(angle = 50, vjust = 0.5, hjust=1)) + \n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-80-1.png){width=672}\n:::\n:::\n\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style; font-weight: bold\" class=\"reveal-text-center\">\n\nOverview on the monthly usage of rideable type.\n\n</p>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = all_datasets_2021) + aes(x = month, fill = rideable_type) + \n  stat_count(width = 0.5) + scale_fill_manual(values = c(\"Dark Blue\",\"Maroon\",\"Purple\")) +\nlabs( title = \"Rideable type Popularity By Months\", x = \"Months\", y = \"Count\", fill = \"Rideable Type\") + \n  theme(axis.text.x = element_text(angle = 40, vjust = 0.5, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Cyclistic_files/figure-html/unnamed-chunk-81-1.png){width=672}\n:::\n:::\n\n\n## MAP VISUALS.\n\n![](Main%20Map.png){.fragment width=\"1064\" height=\"697\"}\n\n```         \n                              Complete Map\n```\n\n![](Start%20Station%20Name.png){.fragment width=\"521\" height=\"698\"}\n\n```         \n                Start Station Name\n```\n\n![](End%20Station%20Name.png){.fragment width=\"493\" height=\"700\"}\n\n```         \n                End Station Name\n```\n\n## [ACT PHASE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<p style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\nThis crucial phase will be carried out by the executive team, Director of Marketing (Lily Moreno) and the Marketing Analytics team based on the above analysis made.\n\n</p>\n\n## [CONCLUSION]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Cyclistic have a greater number of subscribed members as compared to casual riders and, based on the overall analysis, the ratio in which casual riders differ from subscribed members is only 13.76%.\n\n-   Casual riders mostly prefer the weekend slot for choosing a ride with Cyclistic, which is Friday, Saturday and Sunday.\n\n-   Subscribed members in general prefer weekday slots for choosing a ride with Cyclistic,which is Monday to Thursday, as well as the weekend slot.\n\n-   Based on twelve month's data, it was observed that casual riders took the ride for the longest duration of time as compared to subscribed members and also the month which recorded the highest spent time was July.\n\n-   Distribution of rideable type seems completely unbalanced and inappropriate as docked bikes seem to have the least significance in terms of the usage distribution where only one bike was rented within an entire year by a subscribed member as compared to casual riders.\n\n-   The overall month's wise distribution shows that Saturdays and Sundays seem to attract more crowds as compared to all other weekdays and its constant for every single month.\n\n-   Peak hours are mostly from 5'oclock to 7'oclock in the evening for both departure and arrival by each of the member types.\n\n-   Out of three rideable options, the classic bike is the most endorsed one, followed by the electric bike and the docked bike, which have very minimal interaction with subscribed members especially.\n\n</ul>\n\n## [DELIVERABLE]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   From the detailed analysis, it was learned that we need to cater to different sets of casual riders, first, who pursue cyclistic services in a completely oriented manner, and second, who just use them in an emergency or may be once in a while type.\n\n-   One more thing needs to be noted to convert the maximum number of casual riders personified ads and campaigns are very essential and necessary.\n\n-   The other thing is, it's more about how to cater your services in a way which can have multiple unique value propositions based on the type of customers it is directed or promoted to.\n\n-   It's better to push some integral benefits that most people are surrounded by today, such as health, and then diversify health into various subsets like protection from cancer, arthritis,stroke etc to specific groups of casual riders.\n\n-   Firstly introduce one month trial plan with all yearly perks and benefits and then start charging based on a monthly basis or annual basis.Also, use the old trick in the book by adding their payment information in advance and enabling auto payment on both a monthly, quarterly and yearly basis.\n\n-   Remove the one-day subscription plan and include a minimum monthly plan with all the benefits that a member gets yearly and price it higher as compared to the annual plan and discounting should be done in a descending manner.\n\n-   To enable the auto debit feature, ensure users the data is absolutely safe with the cyclistic plus add a tagline saying \"We are never hard on commitments\".\n\n-   Overall distribution of bikes is completely inappropriate as docked bike is just not considered by any members and it is mostly used by casual members due to unavailability. It is essential that company should consider converting all rideable types to electric bikes with different specifications and variants as the future is electric.\n\n-   To make the subscription plan even more fascinating, some additional gear of its own brand can also be introduced or an association with a renowned brand can also be perfect.\n\n-   Try hosting or sponsoring any big events that promote cyclistic and its services under all phenomena and also introduce flesh sales on any special events or occasions as it may help attract more number of customers.\n\n</ul>\n\n## [RESOURCES]{data-incremental=\"\" style=\"font-family: Bookman Old Style;\"}\n\n<ul style=\"font-size: 100%; font-family: Bookman Old Style\" class=\"reveal-text-center\">\n\n-   Stack Overflow.\n-   RStudio and Kaggle community.\n-   Dataset was made available by Motivate International Inc.\n\n</ul>\n",
    "supporting": [
      "Cyclistic_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}